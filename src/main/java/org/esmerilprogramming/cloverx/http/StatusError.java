package org.esmerilprogramming.cloverx.http;

import io.undertow.util.StatusCodes;

public enum StatusError {
  
  BAD_GATEWAY( StatusCodes.BAD_GATEWAY , StatusCodes.BAD_GATEWAY_STRING ),
  BAD_REQUEST( StatusCodes.BAD_REQUEST , StatusCodes.BAD_REQUEST_STRING ),
  CONFLICT( StatusCodes.CONFLICT , StatusCodes.CONFLICT_STRING ),
  EXPECTATION_FAILED( StatusCodes.EXPECTATION_FAILED , StatusCodes.EXPECTATION_FAILED_STRING ),
  FORBIDEN( StatusCodes.FORBIDDEN , StatusCodes.FORBIDDEN_STRING ),
  GATEWAY_TIMEOUT( StatusCodes.GATEWAY_TIME_OUT , StatusCodes.GATEWAY_TIME_OUT_STRING ),
  GONE( StatusCodes.GONE , StatusCodes.GONE_STRING ),
  HTTP_VERSION_NOT_SUPPORTED( StatusCodes.HTTP_VERSION_NOT_SUPPORTED , StatusCodes.HTTP_VERSION_NOT_SUPPORTED_STRING),
  INTERNAL_SERVER_ERROR(StatusCodes.INTERNAL_SERVER_ERROR , StatusCodes.INTERNAL_SERVER_ERROR_STRING ),
  LENGTH_REQUIRED( StatusCodes.LENGTH_REQUIRED , StatusCodes.LENGTH_REQUIRED_STRING ),
  METHOD_NOT_ALLOWED( StatusCodes.METHOD_NOT_ALLOWED , StatusCodes.METHOD_NOT_ALLOWED_STRING),
  NOT_ACCEPTABLE( StatusCodes.NOT_ACCEPTABLE , StatusCodes.NOT_ACCEPTABLE_STRING),
  NOT_FOUND( StatusCodes.NOT_FOUND , StatusCodes.NOT_FOUND_STRING),
  NOT_IMPLEMENTED( StatusCodes.NOT_IMPLEMENTED , StatusCodes.NOT_IMPLEMENTED_STRING),
  PAYMENT_REQUIRED( StatusCodes.PAYMENT_REQUIRED , StatusCodes.PAYMENT_REQUIRED_STRING),
  PRECONDITION_FAILED(StatusCodes.PRECONDITION_FAILED , StatusCodes.PRECONDITION_FAILED_STRING),
  PROXY_AUTHENTICATION_REQUIRED(StatusCodes.PROXY_AUTHENTICATION_REQUIRED , StatusCodes.PROXY_AUTHENTICATION_REQUIRED_STRING),
  REQUEST_ENTITY_TOO_LARGE ( StatusCodes.REQUEST_ENTITY_TOO_LARGE , StatusCodes.REQUEST_ENTITY_TOO_LARGE_STRING),
  REQUEST_TIMEOUT( StatusCodes.REQUEST_TIME_OUT , StatusCodes.REQUEST_TIME_OUT_STRING),
  REQUEST_URI_TOO_LONG( StatusCodes.REQUEST_URI_TOO_LARGE , StatusCodes.REQUEST_URI_TOO_LARGE_STRING ),
  REQUESTED_RANGE_NOT_SATISFIABLE( StatusCodes.REQUEST_RANGE_NOT_SATISFIABLE , StatusCodes.REQUEST_RANGE_NOT_SATISFIABLE_STRING),
  SERVICE_UNAVAILABLE( StatusCodes.SERVICE_UNAVAILABLE , StatusCodes.SERVICE_UNAVAILABLE_STRING),
  UNAUTHORIZED ( StatusCodes.UNAUTHORIZED , StatusCodes.UNAUTHORIZED_STRING ),
  UNSUPPORTED_MEDIA_TYPE ( StatusCodes.UNSUPPORTED_MEDIA_TYPE , StatusCodes.UNSUPPORTED_MEDIA_TYPE_STRING );

  
  private Integer code;
  private String description;

  private StatusError(Integer code, String description) {
    this.code = code;
    this.description = description;
  }

  public Integer getCode() {
    return code;
  }
  
  public String getDescription() {
    return description;
  }
  
}
